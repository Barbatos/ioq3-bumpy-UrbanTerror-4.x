//vertex data //
attribute vec3 IN_position;
attribute vec2 IN_uvs;
attribute vec2 IN_light_uvs;
attribute vec3 IN_normal;
attribute vec3 IN_stv;
attribute vec3 IN_ttv;
attribute vec4 IN_rgba;
////////////////

// scene info //
uniform vec3 IN_eye_pos;
uniform vec3 IN_eye_vec;
////////////////

// Passed to pixel shader //
varying vec2 uv;
varying vec2 light_uv;
varying vec3 i_tangent_0;
varying vec3 i_tangent_1;
varying vec3 i_tangent_2;

varying vec3 eye_to_world;
varying vec3 eyeTangent;
varying vec4 rgba;


////////////////////////////

void main() 
{
	gl_Position = ftransform();

      gl_ClipVertex =  gl_ModelViewMatrix * gl_Vertex;

	vec4 pos;
	pos.xyz = IN_position;
	pos.w   = 1.0;
	
	eye_to_world =   pos.xyz -IN_eye_pos ;
	
	uv = IN_uvs; 
	light_uv = IN_light_uvs; 

	rgba=IN_rgba;
		

	//tangent2world
	i_tangent_0 =  IN_stv;
	i_tangent_1 =  IN_ttv;
	i_tangent_2 =  IN_normal;

  
	eyeTangent =   eye_to_world;
//	mat3  world2tangent = transpose(mat3 ( IN_stv, -IN_ttv, IN_normal));
	mat3  world2tangent = mat3 ( IN_stv.x,  IN_stv.y, IN_stv.z ,
				    -IN_ttv.x, -IN_ttv.y,-IN_ttv.z ,
				   IN_normal.x, IN_normal.y, IN_normal.z );
	                 

//	eyeTangent= mul( world2tangent,eyeTangent);
	eyeTangent=   eyeTangent*world2tangent;

	                 
}
