//vertex data //
attribute vec3 IN_position;
attribute vec2 IN_uvs;
attribute vec2 IN_light_uvs;
attribute vec3 IN_normal;
attribute vec3 IN_stv;
attribute vec3 IN_ttv;
////////////////

// scene info //
uniform vec3 IN_eye_pos;
uniform vec3 IN_eye_vec;
uniform float time;
uniform float scale;
uniform float flip;
////////////////

// Passed to pixel shader //
varying vec2 uv;
varying vec2 uv2;
varying vec2 light_uv;

varying vec3 i_tangent_0;
varying vec3 i_tangent_1;
varying vec3 i_tangent_2;

varying vec3 eye_to_world;
varying vec3 project;
////////////////////////////

void main() 
{
	vec4 pos;
	pos.xyz = IN_position;
	pos.w   = 1.0;
	
	eye_to_world =   pos.xyz -IN_eye_pos;

	//scale	
	vec2 scaled;
	scaled.x=IN_uvs.x*scale;
	scaled.y=IN_uvs.y*scale;

	//scroll the water
	uv = scaled; 

	
	uv.x += time * 0.05;
	uv.y += time * 0.05;
	
	uv2.x = scaled.x*0.3; 
	uv2.y = scaled.y*0.4; 
	
	uv2.x -= time * 0.02;
	uv2.y -= time * 0.03;
	
	light_uv = IN_light_uvs; 
	
	i_tangent_0 =  vec3(IN_stv.x   ,IN_ttv.x   ,IN_normal.x*flip);
	i_tangent_1 =  vec3(IN_stv.y   ,IN_ttv.y   ,IN_normal.y*flip);
	i_tangent_2 =  vec3(IN_stv.z   ,IN_ttv.z   ,IN_normal.z*flip);

	//gl_TexCoord[0]  = pos * IN_texproj;
	//uv = gl_TexCoord[0];

	gl_Position = gl_ModelViewProjectionMatrix * pos;

	project.x =( 0.5 * (gl_Position.w + gl_Position.x));
	project.y =( 0.5 * (gl_Position.w + gl_Position.y));
	project.z = gl_Position.w;


	
}
