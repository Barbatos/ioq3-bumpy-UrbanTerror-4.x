uniform sampler2D scene;
uniform sampler2D bloom;
uniform sampler2DShadow  depth;

uniform float blend;

uniform float offsetx;
uniform float offsety;

uniform vec3  fogcolor;
uniform float fognearfar;
uniform float fogdensity;
uniform float zfar;

uniform float focalfarplane;
uniform float focalplane;
uniform float focalnearplane;
uniform float dofscale;

uniform float inv_fp_sub_fnp;
uniform float inv_ffp_sub_fp;

//how blurry something has to be to be sampled from
const float DOF_TEST = 0.05; 

float counter;
vec3 blurcolor;

float CalcLinearZ(float zinput) 
{
	return	zinput / (fognearfar - (fognearfar - 1.0) * zinput);
}

float CalcDOF(float zinput)
{
	if (zinput<focalplane)
	{
		zinput = (1.0) - ((zinput - focalnearplane) * (inv_fp_sub_fnp));
		
	}
	else
	{
	   zinput = (zinput-(focalplane)) * (inv_ffp_sub_fp);
	}
	
	//cleanup
	zinput = saturate(zinput);

	return zinput;
}


void DoTap(float x, float y,float frac )
{
	float yradius = frac * (x*dofscale * offsetx);
	float xradius = frac * (y*dofscale * offsety);
	
	vec3 tap = vec3(gl_TexCoord[0].st.x+xradius,gl_TexCoord[0].st.y+yradius,0);
	float tapdepth = CalcLinearZ(shadow2D(depth, tap ).r); 
	
	//can we use this tap?
	//Only use a tap if the taps blur isn't in focus
	if (CalcDOF(tapdepth)>DOF_TEST    )
	{		
		blurcolor+= texture2D(scene,tap.xy).xyz;
		counter+=1.0;
	}
}

vec3 DoFog(vec3 finalcolor,float frag)
{
	if (frag==1.0) return finalcolor; //no fog for sky
	
	//fog exp calc expects worldspace units, so multiply by zfar to get world z
	float fogFactor = exp(-(frag*zfar)*fogdensity);
	fogFactor = clamp(fogFactor, 0.0, 1.0);
	
	return mix(fogcolor,finalcolor,fogFactor);
}


float fraction=6.28318531 / 7.0;
vec3 DoDOF(vec3 finalcolor,float blurfactor)
{
	blurfactor = CalcDOF(blurfactor);
	blurcolor = vec3(0,0,0);//finalcolor;
	
	if (blurfactor>0.0)
	{
		//Position our taps based on frac
		counter=0.0;
		float off = gl_TexCoord[0].st.x+gl_TexCoord[0].st.y;
		//blur kernel
//		DoTap(-0.840144, -0.07358,blurfactor);
//		DoTap(-0.695914, 0.457137 ,blurfactor);
//		DoTap(0.96234, -0.194983 ,blurfactor);
//		DoTap(0.519456, 0.767022,blurfactor);
//		DoTap(0.507431, 0.064425 ,blurfactor);
//		DoTap(-0.32194, -0.932615,blurfactor);
		for (int j=0;j<7;j++)
		{
			DoTap(sin(off+j*fraction), cos(off+j*fraction),blurfactor);
		}

		if (counter==0)
		{
			blurcolor=finalcolor;
		}
		else
		{
			blurcolor/=counter;
		}
	}
	else
	{
		blurcolor=finalcolor;
	}
	return blurcolor;
}


void main(void)
{
	
    vec4 t0 = texture2D(scene, gl_TexCoord[0].st);
    vec4 t1 = texture2D(bloom, gl_TexCoord[0].st);

	vec3 finalcolor = t0.xyz;
	
	//frag is linear z depth.  * by zfar to get world lengths
	//need this for fog and dof
	
	float depthcolor = shadow2D(depth, gl_TexCoord[0].xyz).r;
	float frag =CalcLinearZ(depthcolor);
	

	//do DOF (have to do dof first cause it samples the scene)
	finalcolor = DoDOF(finalcolor,frag);

	//Calculate fog
	finalcolor=DoFog(finalcolor,frag);
	
	//Do Bloom
	finalcolor+= (t1.xyz * blend);

	

	//End	
	gl_FragColor.xyz =finalcolor;
	gl_FragColor.w =1.0;
	
	
}


